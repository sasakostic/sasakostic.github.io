{"version":3,"file":"component---src-pages-blog-tsx-68fd228c7ca5ba07daea.js","mappings":"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","sources":["webpack://sasakostic.github.io/./src/components/elements/PostPreview.tsx","webpack://sasakostic.github.io/./src/components/elements/PostsList.tsx","webpack://sasakostic.github.io/./src/components/screens/BlogScreen.tsx","webpack://sasakostic.github.io/./src/pages/blog.tsx","webpack://sasakostic.github.io/./src/components/shared/CardContent.tsx","webpack://sasakostic.github.io/./src/components/shared/Badge.tsx","webpack://sasakostic.github.io/./node_modules/@react-icons/all-files/fi/FiClock.js","webpack://sasakostic.github.io/./src/components/shared/CardTitle.tsx","webpack://sasakostic.github.io/./src/components/shared/Cards.tsx","webpack://sasakostic.github.io/./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack://sasakostic.github.io/./src/utils/time.ts","webpack://sasakostic.github.io/./src/components/shared/PageHeader.tsx","webpack://sasakostic.github.io/./src/components/shared/CardMedia.tsx","webpack://sasakostic.github.io/./src/components/shared/Card.tsx"],"sourcesContent":["import React from 'react';\nimport { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\nimport { FiClock } from '@react-icons/all-files/fi/FiClock';\n\nimport { BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\nimport Card, { cardModeRow } from '../shared/Card';\nimport CardContent, { cardContentModeRow } from '../shared/CardContent';\nimport type { Link as LinkType } from '../../types/Link';\nimport CardTitle from '../shared/CardTitle';\nimport FluidImage from '../shared/FluidImage';\nimport CardMedia, { cardMediaModeRow } from '../shared/CardMedia';\nimport Row from '../shared/Row';\nimport { timeToReadFromRemark } from '../../utils/time';\n\ntype PostPreviewProps = {\n  post: BlogPageQuery_allMdx_nodes,\n};\n\nconst PostPreview = (props: PostPreviewProps): React.ReactElement | null => {\n  const { post } = props;\n\n  const postLink: LinkType = {\n    url: post.fields?.slug,\n  };\n\n  const postCover = post.frontmatter?.cover?.childImageSharp?.gatsbyImageData ? (\n    <FluidImage fluidImage={post.frontmatter?.cover?.childImageSharp?.gatsbyImageData} />\n  ) : null;\n\n  const postSummary = post?.frontmatter?.summary ? (\n    <div className=\"font-light\">\n      {post?.frontmatter?.summary}\n    </div>\n  ) : null;\n\n  const dateElement = post?.frontmatter?.date ? (\n    <Row className=\"mr-6\">\n      <FiCalendar className=\"mr-1\" />\n      {post.frontmatter.date}\n    </Row>\n  ) : null;\n\n  const timeToRead = post?.timeToRead ? (\n    <Row>\n      <FiClock className=\"mr-1\" />\n      {timeToReadFromRemark(post?.timeToRead)} min to read\n    </Row>\n  ) : null;\n\n  return (\n    <Card mode={cardModeRow}>\n      <CardMedia mode={cardMediaModeRow} link={postLink}>\n        {postCover}\n      </CardMedia>\n      <CardContent mode={cardContentModeRow}>\n        <CardTitle link={postLink}>\n          {post?.frontmatter?.title}\n        </CardTitle>\n        <Row className=\"text-xs text-gray-500 mb-3\">\n          {dateElement}\n          {timeToRead}\n        </Row>\n        {postSummary}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","import React from 'react';\n\nimport Cards, { cardModeList } from '../shared/Cards';\nimport PostPreview from './PostPreview';\nimport { BlogPageQuery, BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\n\ntype PostsListProps = {\n  posts: BlogPageQuery,\n};\n\nconst PostsList = (props: PostsListProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsElements = posts.allMdx.nodes.map(\n    (node: BlogPageQuery_allMdx_nodes) => {\n      return <PostPreview post={node} key={node.id} />;\n    },\n  );\n\n  return (\n    <Cards mode={cardModeList}>\n      {postsElements}\n    </Cards>\n  );\n};\n\nexport default PostsList;\n","import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport PostsList from '../elements/PostsList';\nimport { BlogPageQuery } from '../../pages/__generated__/BlogPageQuery';\nimport PageHeader from '../shared/PageHeader';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\nimport SEO from '../shared/SEO';\n\ntype BlogScreenProps = {\n  posts: BlogPageQuery;\n};\n\nconst BlogScreen = (props: BlogScreenProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsNum = posts.allMdx.totalCount;\n\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Blog\"\n        description=\"Articles about life, web-development and machine-learning\"\n      />\n      <Row>\n        <PageHeader>Blog</PageHeader>\n        <Badge className=\"ml-3 self-start\">{postsNum}</Badge>\n      </Row>\n      <PostsList posts={posts} />\n    </PageLayout>\n  );\n};\n\nexport default BlogScreen;\n","import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport BlogScreen from '../components/screens/BlogScreen';\nimport { BlogPageQuery } from './__generated__/BlogPageQuery';\n\ninterface BlogProps extends PageProps {\n  data: BlogPageQuery,\n}\n\nexport const query = graphql`\n  query BlogPageQuery {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      totalCount\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          summary\n          date(formatString: \"MMM D, YYYY\")\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH,\n                quality: 95,\n                transformOptions: {\n                  fit: COVER,\n                  cropFocus: CENTER,\n                  grayscale: false,\n                },\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props: BlogProps): React.ReactElement => {\n  const { data } = props;\n\n  return (\n    <BlogScreen posts={data} />\n  );\n};\n\nexport default Blog;\n","import React from 'react';\n\ntype CardContentMode = 'row' | 'column';\n\nexport const cardContentModeRow: CardContentMode = 'row';\nexport const cardContentModeColumn: CardContentMode = 'column';\n\ntype CardContentProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardContentMode,\n};\n\nconst CardContent = (props: CardContentProps): React.ReactElement | null => {\n  const { children, className = '', mode = cardContentModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = `p-6 ${className}`;\n\n  const classes = mode === cardContentModeRow\n    ? `${commonClasses} sm:w-3/5 lg:w-3/4`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes} style={{ flex: 1 }}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\n\ntype BadgeProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst Badge = (props: BadgeProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClassName = 'bg-gray-200 px-1 rounded text-xs';\n  const classes = `${commonClassName} ${className}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiClock = function FiClock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 6 12 12 16 14\"}}]})(props);\n};\n","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n  children: React.ReactNode,\n  mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiCalendar = function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"}}]})(props);\n};\n","// Adjusting the time to read.\n// gatsby-transformer-remark plugin relies on the 265 average words per minute.\n// @see: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-remark/src/utils/time-to-read.js\nexport const timeToReadFromRemark = (\n  remarkTimeToRead?: number | null | undefined,\n): number | null => {\n  if (typeof remarkTimeToRead !== 'number') {\n    return null;\n  }\n  const timeToReadMultiplier = 1;\n  const minTimeToRead = 1;\n  return Math.ceil(remarkTimeToRead * timeToReadMultiplier) || minTimeToRead;\n};\n\nexport const wait = async (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardMediaMode = 'row' | 'column';\n\nexport const cardMediaModeRow: CardMediaMode = 'row';\nexport const cardMediaModeColumn: CardMediaMode = 'column';\n\ntype CardMediaProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardMediaMode,\n  link?: Link,\n};\n\nconst CardMedia = (props: CardMediaProps): React.ReactElement | null => {\n  const {\n    children,\n    className = '',\n    mode = cardMediaModeColumn,\n    link,\n  } = props;\n\n  const linkClasses = link && link.url\n    ? 'cursor-pointer'\n    : '';\n\n  const commonClasses = `transition duration-200 ease-in-out transform hover:-translate-y-1 hover:scale-105 h-48 bg-cover bg-gray-200 overflow-hidden block ${className} ${linkClasses}`;\n\n  const classes = mode === cardMediaModeRow\n    ? `${commonClasses} sm:h-auto sm:w-2/5 lg:w-1/4`\n    : `${commonClasses}`;\n\n  const wrappedChildren = link && link.url ? (\n    <HyperLink link={link} formatted={false}>\n      {children}\n    </HyperLink>\n  ) : children;\n\n  return (\n    <div className={classes}>\n      {wrappedChildren}\n    </div>\n  );\n};\n\nexport default CardMedia;\n","import React from 'react';\n\ntype CardMode = 'row' | 'column';\n\nexport const cardModeRow: CardMode = 'row';\nexport const cardModeColumn: CardMode = 'column';\n\ntype CardProps = {\n  children: React.ReactNode,\n  mode?: CardMode,\n};\n\nconst Card = (props: CardProps): React.ReactElement | null => {\n  const { children, mode = cardModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardStyles = 'transition duration-200 ease-in-out shadow-card rounded-md overflow-hidden bg-white flex flex-col';\n\n  const classes = mode === cardModeRow\n    ? `${commonCardStyles} sm:flex-row items-stretch`\n    : `${commonCardStyles}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","_post$fields","_post$frontmatter","_post$frontmatter$cov","_post$frontmatter$cov2","_post$frontmatter2","_post$frontmatter2$co","_post$frontmatter2$co2","_post$frontmatter3","_post$frontmatter4","_post$frontmatter5","_post$frontmatter6","post","postLink","url","fields","slug","postCover","frontmatter","cover","childImageSharp","gatsbyImageData","React","FluidImage","fluidImage","postSummary","summary","className","dateElement","date","Row","FiCalendar","timeToRead","FiClock","timeToReadFromRemark","Card","mode","cardModeRow","CardMedia","cardMediaModeRow","link","CardContent","cardContentModeRow","CardTitle","title","posts","postsElements","allMdx","nodes","map","node","PostPreview","key","id","Cards","cardModeList","postsNum","totalCount","PageLayout","SEO","description","PageHeader","Badge","PostsList","data","BlogScreen","cardContentModeColumn","children","commonClasses","classes","style","flex","commonClassName","GenIcon","module","exports","headerElement","H","level","hLevel","h3","linkElement","HyperLink","cardModeGrid","remarkTimeToRead","Math","ceil","h1","cardMediaModeColumn","wrappedChildren","formatted","cardModeColumn","commonCardStyles"],"sourceRoot":""}