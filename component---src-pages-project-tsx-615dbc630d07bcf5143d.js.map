{"version":3,"file":"component---src-pages-project-tsx-615dbc630d07bcf5143d.js","mappings":"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","sources":["webpack://sasakostic.github.io/./src/pages/project.tsx","webpack://sasakostic.github.io/./src/components/shared/CardContent.tsx","webpack://sasakostic.github.io/./src/components/shared/Badge.tsx","webpack://sasakostic.github.io/./node_modules/@react-icons/all-files/fi/FiClock.js","webpack://sasakostic.github.io/./src/components/elements/PostPreview.tsx","webpack://sasakostic.github.io/./src/components/elements/PostsList.tsx","webpack://sasakostic.github.io/./src/components/screens/BlogScreen.tsx","webpack://sasakostic.github.io/./src/components/shared/CardTitle.tsx","webpack://sasakostic.github.io/./src/components/shared/Cards.tsx","webpack://sasakostic.github.io/./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack://sasakostic.github.io/./src/utils/time.ts","webpack://sasakostic.github.io/./src/components/shared/PageHeader.tsx","webpack://sasakostic.github.io/./src/components/shared/CardMedia.tsx","webpack://sasakostic.github.io/./src/components/shared/Card.tsx"],"sourcesContent":["import React from 'react';\nimport { graphql, PageProps } from 'gatsby';\n\nimport BlogScreen from '../components/screens/BlogScreen';\nimport { BlogPageQuery } from './__generated__/BlogPageQuery';\n\ninterface BlogProps extends PageProps {\n  data: BlogPageQuery,\n}\n\nexport const query = graphql`\n  query BlogPageQuery {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      totalCount\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          summary\n          date(formatString: \"MMM D, YYYY\")\n          cover {\n            childImageSharp {\n              gatsbyImageData(\n                layout: FULL_WIDTH,\n                quality: 95,\n                transformOptions: {\n                  fit: COVER,\n                  cropFocus: CENTER,\n                  grayscale: false,\n                },\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props: BlogProps): React.ReactElement => {\n  const { data } = props;\n\n  return (\n    <BlogScreen posts={data} />\n  );\n};\n\nexport default Blog;\n","import React from 'react';\n\ntype CardContentMode = 'row' | 'column';\n\nexport const cardContentModeRow: CardContentMode = 'row';\nexport const cardContentModeColumn: CardContentMode = 'column';\n\ntype CardContentProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardContentMode,\n};\n\nconst CardContent = (props: CardContentProps): React.ReactElement | null => {\n  const { children, className = '', mode = cardContentModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = `p-6 ${className}`;\n\n  const classes = mode === cardContentModeRow\n    ? `${commonClasses} sm:w-3/5 lg:w-3/4`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes} style={{ flex: 1 }}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\n\ntype BadgeProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst Badge = (props: BadgeProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClassName = 'bg-gray-200 px-1 rounded text-xs';\n  const classes = `${commonClassName} ${className}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiClock = function FiClock (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\"}},{\"tag\":\"polyline\",\"attr\":{\"points\":\"12 6 12 12 16 14\"}}]})(props);\n};\n","import React from 'react';\nimport { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\nimport { FiClock } from '@react-icons/all-files/fi/FiClock';\n\nimport { BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\nimport Card, { cardModeRow } from '../shared/Card';\nimport CardContent, { cardContentModeRow } from '../shared/CardContent';\nimport type { Link as LinkType } from '../../types/Link';\nimport CardTitle from '../shared/CardTitle';\nimport FluidImage from '../shared/FluidImage';\nimport CardMedia, { cardMediaModeRow } from '../shared/CardMedia';\nimport Row from '../shared/Row';\nimport { timeToReadFromRemark } from '../../utils/time';\n\ntype PostPreviewProps = {\n  post: BlogPageQuery_allMdx_nodes,\n};\n\nconst PostPreview = (props: PostPreviewProps): React.ReactElement | null => {\n  const { post } = props;\n\n  const postLink: LinkType = {\n    url: post.fields?.slug,\n  };\n\n  const postCover = post.frontmatter?.cover?.childImageSharp?.gatsbyImageData ? (\n    <FluidImage fluidImage={post.frontmatter?.cover?.childImageSharp?.gatsbyImageData} />\n  ) : null;\n\n  const postSummary = post?.frontmatter?.summary ? (\n    <div className=\"font-light\">\n      {post?.frontmatter?.summary}\n    </div>\n  ) : null;\n\n  const dateElement = post?.frontmatter?.date ? (\n    <Row className=\"mr-6\">\n      <FiCalendar className=\"mr-1\" />\n      {post.frontmatter.date}\n    </Row>\n  ) : null;\n\n  const timeToRead = post?.timeToRead ? (\n    <Row>\n      <FiClock className=\"mr-1\" />\n      {timeToReadFromRemark(post?.timeToRead)} min to read\n    </Row>\n  ) : null;\n\n  return (\n    <Card mode={cardModeRow}>\n      <CardMedia mode={cardMediaModeRow} link={postLink}>\n        {postCover}\n      </CardMedia>\n      <CardContent mode={cardContentModeRow}>\n        <CardTitle link={postLink}>\n          {post?.frontmatter?.title}\n        </CardTitle>\n        <Row className=\"text-xs text-gray-500 mb-3\">\n          {dateElement}\n          {timeToRead}\n        </Row>\n        {postSummary}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","import React from 'react';\n\nimport Cards, { cardModeList } from '../shared/Cards';\nimport PostPreview from './PostPreview';\nimport { BlogPageQuery, BlogPageQuery_allMdx_nodes } from '../../pages/__generated__/BlogPageQuery';\n\ntype PostsListProps = {\n  posts: BlogPageQuery,\n};\n\nconst PostsList = (props: PostsListProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsElements = posts.allMdx.nodes.map(\n    (node: BlogPageQuery_allMdx_nodes) => {\n      return <PostPreview post={node} key={node.id} />;\n    },\n  );\n\n  return (\n    <Cards mode={cardModeList}>\n      {postsElements}\n    </Cards>\n  );\n};\n\nexport default PostsList;\n","import React from 'react';\n\nimport PageLayout from '../layouts/PageLayout';\nimport PostsList from '../elements/PostsList';\nimport { BlogPageQuery } from '../../pages/__generated__/BlogPageQuery';\nimport PageHeader from '../shared/PageHeader';\nimport Row from '../shared/Row';\nimport Badge from '../shared/Badge';\nimport SEO from '../shared/SEO';\n\ntype BlogScreenProps = {\n  posts: BlogPageQuery;\n};\n\nconst BlogScreen = (props: BlogScreenProps): React.ReactElement => {\n  const { posts } = props;\n\n  const postsNum = posts.allMdx.totalCount;\n\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Blog\"\n        description=\"Articles about life, web-development and machine-learning\"\n      />\n      <Row>\n        <PageHeader>Blog</PageHeader>\n        <Badge className=\"ml-3 self-start\">{postsNum}</Badge>\n      </Row>\n      <PostsList posts={posts} />\n    </PageLayout>\n  );\n};\n\nexport default BlogScreen;\n","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n  children: React.ReactNode,\n  mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiCalendar = function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"}}]})(props);\n};\n","// Adjusting the time to read.\n// gatsby-transformer-remark plugin relies on the 265 average words per minute.\n// @see: https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-transformer-remark/src/utils/time-to-read.js\nexport const timeToReadFromRemark = (\n  remarkTimeToRead?: number | null | undefined,\n): number | null => {\n  if (typeof remarkTimeToRead !== 'number') {\n    return null;\n  }\n  const timeToReadMultiplier = 1;\n  const minTimeToRead = 1;\n  return Math.ceil(remarkTimeToRead * timeToReadMultiplier) || minTimeToRead;\n};\n\nexport const wait = async (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardMediaMode = 'row' | 'column';\n\nexport const cardMediaModeRow: CardMediaMode = 'row';\nexport const cardMediaModeColumn: CardMediaMode = 'column';\n\ntype CardMediaProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardMediaMode,\n  link?: Link,\n};\n\nconst CardMedia = (props: CardMediaProps): React.ReactElement | null => {\n  const {\n    children,\n    className = '',\n    mode = cardMediaModeColumn,\n    link,\n  } = props;\n\n  const linkClasses = link && link.url\n    ? 'cursor-pointer'\n    : '';\n\n  const commonClasses = `transition duration-200 ease-in-out transform hover:-translate-y-1 hover:scale-105 h-48 bg-cover bg-gray-200 overflow-hidden block ${className} ${linkClasses}`;\n\n  const classes = mode === cardMediaModeRow\n    ? `${commonClasses} sm:h-auto sm:w-2/5 lg:w-1/4`\n    : `${commonClasses}`;\n\n  const wrappedChildren = link && link.url ? (\n    <HyperLink link={link} formatted={false}>\n      {children}\n    </HyperLink>\n  ) : children;\n\n  return (\n    <div className={classes}>\n      {wrappedChildren}\n    </div>\n  );\n};\n\nexport default CardMedia;\n","import React from 'react';\n\ntype CardMode = 'row' | 'column';\n\nexport const cardModeRow: CardMode = 'row';\nexport const cardModeColumn: CardMode = 'column';\n\ntype CardProps = {\n  children: React.ReactNode,\n  mode?: CardMode,\n};\n\nconst Card = (props: CardProps): React.ReactElement | null => {\n  const { children, mode = cardModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardStyles = 'transition duration-200 ease-in-out shadow-card rounded-md overflow-hidden bg-white flex flex-col';\n\n  const classes = mode === cardModeRow\n    ? `${commonCardStyles} sm:flex-row items-stretch`\n    : `${commonCardStyles}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","data","React","BlogScreen","posts","cardContentModeRow","cardContentModeColumn","children","className","mode","commonClasses","classes","style","flex","commonClassName","GenIcon","module","exports","_post$fields","_post$frontmatter","_post$frontmatter$cov","_post$frontmatter$cov2","_post$frontmatter2","_post$frontmatter2$co","_post$frontmatter2$co2","_post$frontmatter3","_post$frontmatter4","_post$frontmatter5","_post$frontmatter6","post","postLink","url","fields","slug","postCover","frontmatter","cover","childImageSharp","gatsbyImageData","FluidImage","fluidImage","postSummary","summary","dateElement","date","Row","FiCalendar","timeToRead","FiClock","timeToReadFromRemark","Card","cardModeRow","CardMedia","cardMediaModeRow","link","CardContent","CardTitle","title","postsElements","allMdx","nodes","map","node","PostPreview","key","id","Cards","cardModeList","postsNum","totalCount","PageLayout","SEO","description","PageHeader","Badge","PostsList","headerElement","H","level","hLevel","h3","linkElement","HyperLink","cardModeGrid","remarkTimeToRead","Math","ceil","h1","cardMediaModeColumn","wrappedChildren","formatted","cardModeColumn","commonCardStyles"],"sourceRoot":""}