{"version":3,"file":"component---src-pages-projects-tsx-9f1996df3b29348932ea.js","mappings":"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","sources":["webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/bi/BiInfoCircle.js","webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/fi/FiArchive.js","webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/fi/FiCalendar.js","webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/fi/FiStar.js","webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/gi/GiAchievement.js","webpack://trekhleb.github.io/./node_modules/@react-icons/all-files/io5/IoPlay.js","webpack://trekhleb.github.io/./src/components/shared/Archived.tsx","webpack://trekhleb.github.io/./src/components/shared/Badge.tsx","webpack://trekhleb.github.io/./src/components/shared/ButtonLink.tsx","webpack://trekhleb.github.io/./src/components/shared/Card.tsx","webpack://trekhleb.github.io/./src/components/shared/CardContent.tsx","webpack://trekhleb.github.io/./src/components/shared/CardMedia.tsx","webpack://trekhleb.github.io/./src/components/shared/CardTitle.tsx","webpack://trekhleb.github.io/./src/components/shared/Cards.tsx","webpack://trekhleb.github.io/./src/components/shared/DateRange.tsx","webpack://trekhleb.github.io/./src/components/shared/PageHeader.tsx","webpack://trekhleb.github.io/./src/components/shared/Stars.tsx","webpack://trekhleb.github.io/./src/utils/numbers.ts","webpack://trekhleb.github.io/./src/components/shared/Tag.tsx","webpack://trekhleb.github.io/./src/components/shared/Tags.tsx","webpack://trekhleb.github.io/./src/data/projects.ts","webpack://trekhleb.github.io/./src/components/shared/CardActions.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectPreview.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectsList.tsx","webpack://trekhleb.github.io/./src/components/elements/ProjectFilters.tsx","webpack://trekhleb.github.io/./src/utils/ssr.ts","webpack://trekhleb.github.io/./src/utils/url.ts","webpack://trekhleb.github.io/./src/components/screens/ProjectsScreen.tsx","webpack://trekhleb.github.io/./src/pages/projects.tsx","webpack://trekhleb.github.io/./src/utils/project.ts"],"sourcesContent":["// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.BiInfoCircle = function BiInfoCircle (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2C6.486,2,2,6.486,2,12s4.486,10,10,10s10-4.486,10-10S17.514,2,12,2z M12,20c-4.411,0-8-3.589-8-8s3.589-8,8-8 s8,3.589,8,8S16.411,20,12,20z\"}},{\"tag\":\"path\",\"attr\":{\"d\":\"M11 11H13V17H11zM11 7H13V9H11z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiArchive = function FiArchive (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polyline\",\"attr\":{\"points\":\"21 8 21 21 3 21 3 8\"}},{\"tag\":\"rect\",\"attr\":{\"x\":\"1\",\"y\":\"3\",\"width\":\"22\",\"height\":\"5\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"10\",\"y1\":\"12\",\"x2\":\"14\",\"y2\":\"12\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiCalendar = function FiCalendar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"3\",\"y\":\"4\",\"width\":\"18\",\"height\":\"18\",\"rx\":\"2\",\"ry\":\"2\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"16\",\"y1\":\"2\",\"x2\":\"16\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"8\",\"y1\":\"2\",\"x2\":\"8\",\"y2\":\"6\"}},{\"tag\":\"line\",\"attr\":{\"x1\":\"3\",\"y1\":\"10\",\"x2\":\"21\",\"y2\":\"10\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.FiStar = function FiStar (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"stroke\":\"currentColor\",\"strokeWidth\":\"2\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\"},\"child\":[{\"tag\":\"polygon\",\"attr\":{\"points\":\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.GiAchievement = function GiAchievement (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M305.975 298.814l22.704 2.383V486l-62.712-66.965V312.499l18.214 8.895zm-99.95 0l-22.716 2.383V486l62.711-66.965V312.499l-18.213 8.895zm171.98-115.78l7.347 25.574-22.055 14.87-1.847 26.571-25.81 6.425-10.803 24.314-26.46-2.795-18.475 19.087L256 285.403l-23.902 11.677-18.475-19.15-26.46 2.795-10.803-24.313-25.81-6.363-1.847-26.534-22.118-14.92 7.348-25.573-15.594-21.544 15.644-21.52-7.398-25.523 22.068-14.87L150.5 73.03l25.86-6.362 10.803-24.313 26.46 2.794L232.098 26 256 37.677 279.902 26l18.475 19.149 26.46-2.794 10.803 24.313 25.81 6.425 1.847 26.534 22.055 14.87-7.347 25.574 15.656 21.407zm-49.214-21.556a72.242 72.242 0 1 0-72.242 72.242 72.355 72.355 0 0 0 72.242-72.242zm-72.242-52.283a52.282 52.282 0 1 0 52.282 52.283 52.395 52.395 0 0 0-52.282-52.245z\"}}]})(props);\n};\n","// THIS FILE IS AUTO GENERATED\nvar GenIcon = require('../lib').GenIcon\nmodule.exports.IoPlay = function IoPlay (props) {\n  return GenIcon({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 512 512\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M133 440a35.37 35.37 0 01-17.5-4.67c-12-6.8-19.46-20-19.46-34.33V111c0-14.37 7.46-27.53 19.46-34.33a35.13 35.13 0 0135.77.45l247.85 148.36a36 36 0 010 61l-247.89 148.4A35.5 35.5 0 01133 440z\"}}]})(props);\n};\n","import React from 'react';\nimport { FiArchive } from '@react-icons/all-files/fi/FiArchive';\n\nimport Row from './Row';\n\nconst Archived = (): React.ReactElement => {\n  return (\n    <div\n      title=\"Project has been archived and is currently not active\"\n      className=\"transition duration-200 ease-in-out py-2 px-3 text-red-600 border border-red-600 rounded border-solid hover:bg-red-500 hover:text-white rounded cursor-not-allowed\"\n    >\n      <Row>\n        <div className=\"mr-2\">\n          <FiArchive />\n        </div>\n        <div>\n          Archived\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Archived;\n","import React from 'react';\n\ntype BadgeProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst Badge = (props: BadgeProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClassName = 'bg-gray-200 px-1 rounded text-xs';\n  const classes = `${commonClassName} ${className}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Badge;\n","import React from 'react';\nimport HyperLink, { HyperLinkProps } from './HyperLink';\n\ntype ButtonLinkProps = HyperLinkProps;\n\nconst ButtonLink = (props: ButtonLinkProps): React.ReactElement => {\n  const {\n    className,\n    hoverClassName = '',\n    children,\n    ...rest\n  } = props;\n\n  const hoverButtonClasses = `hover:bg-black hover:text-white ${hoverClassName}`;\n  const buttonClasses = 'bg-white py-2 px-3 rounded shadow-sm border border-solid border-gray-300';\n  const classes = `${className} ${buttonClasses}`;\n\n  return (\n    <HyperLink\n      {...rest}\n      className={classes}\n      hoverClassName={hoverButtonClasses}\n    >\n      {children}\n    </HyperLink>\n  );\n};\n\nexport default ButtonLink;\n","import React from 'react';\n\ntype CardMode = 'row' | 'column';\n\nexport const cardModeRow: CardMode = 'row';\nexport const cardModeColumn: CardMode = 'column';\n\ntype CardProps = {\n  children: React.ReactNode,\n  mode?: CardMode,\n};\n\nconst Card = (props: CardProps): React.ReactElement | null => {\n  const { children, mode = cardModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonCardStyles = 'transition duration-200 ease-in-out shadow-card rounded-md overflow-hidden bg-white flex flex-col';\n\n  const classes = mode === cardModeRow\n    ? `${commonCardStyles} sm:flex-row items-stretch`\n    : `${commonCardStyles}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\ntype CardContentMode = 'row' | 'column';\n\nexport const cardContentModeRow: CardContentMode = 'row';\nexport const cardContentModeColumn: CardContentMode = 'column';\n\ntype CardContentProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardContentMode,\n};\n\nconst CardContent = (props: CardContentProps): React.ReactElement | null => {\n  const { children, className = '', mode = cardContentModeColumn } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = `p-6 ${className}`;\n\n  const classes = mode === cardContentModeRow\n    ? `${commonClasses} sm:w-3/5 lg:w-3/4`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes} style={{ flex: 1 }}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardContent;\n","import React from 'react';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardMediaMode = 'row' | 'column';\n\nexport const cardMediaModeRow: CardMediaMode = 'row';\nexport const cardMediaModeColumn: CardMediaMode = 'column';\n\ntype CardMediaProps = {\n  children: React.ReactNode,\n  className?: string,\n  mode?: CardMediaMode,\n  link?: Link,\n};\n\nconst CardMedia = (props: CardMediaProps): React.ReactElement | null => {\n  const {\n    children,\n    className = '',\n    mode = cardMediaModeColumn,\n    link,\n  } = props;\n\n  const linkClasses = link && link.url\n    ? 'cursor-pointer'\n    : '';\n\n  const commonClasses = `transition duration-200 ease-in-out transform hover:-translate-y-1 hover:scale-105 h-48 bg-cover bg-gray-200 overflow-hidden block ${className} ${linkClasses}`;\n\n  const classes = mode === cardMediaModeRow\n    ? `${commonClasses} sm:h-auto sm:w-2/5 lg:w-1/4`\n    : `${commonClasses}`;\n\n  const wrappedChildren = link && link.url ? (\n    <HyperLink link={link} formatted={false}>\n      {children}\n    </HyperLink>\n  ) : children;\n\n  return (\n    <div className={classes}>\n      {wrappedChildren}\n    </div>\n  );\n};\n\nexport default CardMedia;\n","import React from 'react';\nimport H, { hLevel } from './H';\nimport { Link } from '../../types/Link';\nimport HyperLink from './HyperLink';\n\ntype CardTitleProps = {\n  children: React.ReactNode,\n  link?: Link,\n};\n\nconst CardTitle = (props: CardTitleProps): React.ReactElement | null => {\n  const { children, link } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const headerElement = (\n    <H level={hLevel.h3}>\n      {children}\n    </H>\n  );\n\n  const linkElement = link ? (\n    <HyperLink link={link}>\n      {headerElement}\n    </HyperLink>\n  ) : null;\n\n  return (\n    <div className=\"mb-3\">\n      {linkElement || headerElement}\n    </div>\n  );\n};\n\nexport default CardTitle;\n","import React from 'react';\n\ntype CardsMode = 'list' | 'grid';\n\nexport const cardModeList: CardsMode = 'list';\nexport const cardModeGrid: CardsMode = 'grid';\n\ntype CardsProps = {\n  children: React.ReactNode,\n  mode?: CardsMode,\n};\n\nconst Cards = (props: CardsProps): React.ReactElement | null => {\n  const { children, mode = cardModeGrid } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  const commonClasses = 'grid gap-12 grid-cols-1';\n\n  const classes = mode === cardModeGrid\n    ? `${commonClasses} sm:grid-cols-2 lg:grid-cols-3`\n    : `${commonClasses}`;\n\n  return (\n    <div className={classes}>\n      {children}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport { FiCalendar } from '@react-icons/all-files/fi/FiCalendar';\n\nimport { DateString } from '../../types/Date';\nimport Row from './Row';\n\nexport type DateRangeProps = {\n  startDate?: DateString | null,\n  endDate?: DateString | null,\n  className?: string,\n  withDay?: boolean,\n};\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst dateToString = (date: Date, withDay = false): string => {\n  const month = months[date.getMonth()];\n  const day = withDay ? ` ${date.getDate()}, ` : ' ';\n  const year = date.getFullYear();\n  return `${month}${day}${year}`;\n};\n\nconst DateRange = (props: DateRangeProps): React.ReactElement | null => {\n  const {\n    startDate,\n    endDate,\n    className = '',\n    withDay = false,\n  } = props;\n\n  if (!startDate && !endDate) {\n    return null;\n  }\n\n  const startDateString = startDate ? dateToString(new Date(startDate), withDay) : null;\n\n  const dateSeparator = startDate && endDate ? ' → ' : null;\n\n  const endDateString = endDate ? dateToString(new Date(endDate), withDay) : null;\n\n  return (\n    <div className={className}>\n      <Row>\n        <FiCalendar className=\"mr-1\" />\n        <div>\n          {startDateString}\n          {dateSeparator}\n          {endDateString}\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default DateRange;\n","import React from 'react';\nimport H, { hLevel } from './H';\n\ntype PageHeaderProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst PageHeader = (props: PageHeaderProps): React.ReactElement | null => {\n  const { children, className = '' } = props;\n\n  const commonClasses = 'mb-6 uppercase font-extrabold';\n\n  const classes = `${commonClasses} ${className}`;\n\n  return (\n    <H level={hLevel.h1} className={classes}>{children}</H>\n  );\n};\n\nexport default PageHeader;\n","import React from 'react';\nimport { FiStar } from '@react-icons/all-files/fi/FiStar';\nimport Row from './Row';\nimport HyperLink from './HyperLink';\nimport { Link as LinkType } from '../../types/Link';\nimport { numberToConciseString } from '../../utils/numbers';\n\ntype StarsProps = {\n  link?: LinkType,\n  stars?: number | null | undefined,\n  className?: string,\n};\n\nconst Stars = (props: StarsProps): React.ReactElement | null => {\n  const { stars = 0, className = '', link } = props;\n\n  if (typeof stars !== 'number') {\n    return null;\n  }\n\n  const starsElements = (\n    <>\n      <FiStar size={14} />\n      <div className=\"ml-1 text-xs font-bold\">\n        {numberToConciseString(stars)}\n      </div>\n    </>\n  );\n\n  const starsElementsWrapped = link ? (\n    <HyperLink link={link}>\n      {starsElements}\n    </HyperLink>\n  ) : starsElements;\n\n  return (\n    <Row className={className}>\n      {starsElementsWrapped}\n    </Row>\n  );\n};\n\nexport default Stars;\n","export function numberToConciseString(num: number): string {\n  if (num >= 1000) {\n    return `${(num / 1000).toFixed(1).replace(/\\.0$/, '')}K`;\n  }\n  return `${num}`;\n}\n","import React from 'react';\n\nimport type { Tag as TagType } from '../../types/Tag';\n\ntype TagProps = {\n  tag: TagType,\n};\n\nconst Tag = (props: TagProps): React.ReactElement => {\n  const { tag } = props;\n\n  return (\n    <span\n      key={tag.name}\n      className=\"inline-block bg-gray-200 rounded-sm px-2 py-1 text-xs font-normal last:mr-0\"\n    >\n      {tag.name}\n    </span>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\n\nimport type { Tag as TagType } from '../../types/Tag';\nimport Tag from './Tag';\nimport Expander from './Expander';\n\ntype TagsProps = {\n  tags: TagType[],\n  className?: string,\n  itemClassName?: string,\n  numToShow?: number,\n};\n\nconst Tags = (props: TagsProps): React.ReactElement | null => {\n  const {\n    tags,\n    className = '',\n    itemClassName = 'mr-2 mb-2',\n    numToShow = Infinity,\n  } = props;\n\n  if (!tags) {\n    return null;\n  }\n\n  const defaultClasses = '';\n  const classes = `${defaultClasses} ${className}`;\n\n  const onRender = (tag: TagType): React.ReactElement => {\n    return (\n      <Tag key={tag.name} tag={tag} />\n    );\n  };\n\n  const toHide = (tag: TagType, index: number): boolean => {\n    return index >= numToShow;\n  };\n\n  return (\n    <div className={classes}>\n      <Expander\n        items={tags}\n        toHide={toHide}\n        onRender={onRender}\n        itemClassName={itemClassName}\n      />\n    </div>\n  );\n};\n\nexport default Tags;\n","import { Projects } from '../types/Project';\n\nexport const projects: Projects = {\n  'test-project-one': {\n    id: 'test-project-one',\n    name: '💬 Test Project • One',\n    srcURL: { url: 'https://github.com/sasakostic/product-reviews-system' },\n    demoURL: { url: 'https://github.com/sasakostic/product-reviews-system' },\n    cover: { srcPath: 'projects/homemade-gpt-js/cover.jpg' },\n    startDate: '2025-09-18',\n    summary: [\n      'Test project description',\n    ],\n    tags: [\n      { name: 'TEST' },\n      { name: 'Coding' },\n    ],\n    gitHubRepo: {\n      owner: 'sasakostic',\n      repo: 'product-reviews-system',\n    },\n    achievements: [],\n  },\n};\n","import React from 'react';\nimport Row from './Row';\n\ntype CardActionsProps = {\n  children: React.ReactNode,\n  className?: string,\n};\n\nconst CardActions = (props: CardActionsProps): React.ReactElement | null => {\n  const { children, className = 'px-6 pb-6' } = props;\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <Row>\n        {children}\n      </Row>\n    </div>\n  );\n};\n\nexport default CardActions;\n","import React from 'react';\nimport { IoPlay } from '@react-icons/all-files/io5/IoPlay';\nimport { FaGithub } from '@react-icons/all-files/fa/FaGithub';\nimport { BiInfoCircle } from '@react-icons/all-files/bi/BiInfoCircle';\nimport { GiAchievement } from '@react-icons/all-files/gi/GiAchievement';\n\nimport { Project as ProjectType } from '../../types/Project';\nimport DateRange from '../shared/DateRange';\nimport Card from '../shared/Card';\nimport CardContent from '../shared/CardContent';\nimport CardMedia from '../shared/CardMedia';\nimport Tags from '../shared/Tags';\nimport FluidImage from '../shared/FluidImage';\nimport CardTitle from '../shared/CardTitle';\nimport CardActions from '../shared/CardActions';\nimport ButtonLink from '../shared/ButtonLink';\nimport Archived from '../shared/Archived';\nimport Stars from '../shared/Stars';\nimport Row from '../shared/Row';\nimport { getGitHubProjectStars, getProjectAchievementsLink } from '../../utils/project';\nimport { Link } from '../../types/Link';\nimport HyperLink from '../shared/HyperLink';\nimport Badge from '../shared/Badge';\n\ntype ProjectPreviewProps = {\n  project: ProjectType | null,\n};\n\nconst tagsPerProject = 3;\n\nconst withAchievements = true;\n\nconst ProjectPreview = (props: ProjectPreviewProps): React.ReactElement | null => {\n  const { project } = props;\n\n  if (!project) {\n    return null;\n  }\n\n  const projectTags = project?.tags ? (\n    <div>\n      <Tags tags={project.tags} numToShow={tagsPerProject} />\n    </div>\n  ) : null;\n\n  const projectDates = (\n    <DateRange\n      startDate={project.startDate}\n      endDate={project.endDate}\n      className=\"text-xs text-gray-500\"\n    />\n  );\n\n  const projectStars = getGitHubProjectStars(project);\n  const projectStarsLink: Link = {\n    url: project?.srcURL?.url,\n    caption: 'Stars on GitHub',\n  };\n  const stars = typeof projectStars === 'number' ? (\n    <Stars\n      stars={projectStars}\n      link={projectStarsLink}\n      className=\"text-xs text-gray-500 font-light\"\n    />\n  ) : null;\n\n  /* eslint-disable react/no-array-index-key */\n  const projectSummaryLines = project.summary ? project.summary.map(\n    (summaryLine: string | null, index: number) => (\n      <p key={index}>\n        {summaryLine}\n      </p>\n    ),\n  ) : null;\n\n  const projectSummary = projectSummaryLines ? (\n    <div className=\"mb-3 font-light\">\n      {projectSummaryLines}\n    </div>\n  ) : null;\n\n  const defaultProjectUrl = project.archived ? undefined : project.demoURL || project.srcURL;\n\n  const demoLink = project.demoURL && !project.archived ? (\n    <ButtonLink\n      link={project.demoURL}\n      startEnhancer={<IoPlay />}\n      className=\"mr-4\"\n    >\n      Demo\n    </ButtonLink>\n  ) : null;\n\n  const sourceCodeLink = project.srcURL && !project.archived ? (\n    <ButtonLink\n      link={project.srcURL}\n      startEnhancer={<FaGithub />}\n    >\n      Source Code\n    </ButtonLink>\n  ) : null;\n\n  const projectCover = project.cover ? (\n    <FluidImage image={project.cover} />\n  ) : null;\n\n  const archivedStamp = project?.archived ? (\n    <CardActions>\n      <Archived />\n    </CardActions>\n  ) : null;\n\n  const actions = demoLink || sourceCodeLink ? (\n    <CardActions>\n      {demoLink}\n      {sourceCodeLink}\n    </CardActions>\n  ) : null;\n\n  const extraLinksList = project?.links && project?.links.length\n    ? project?.links.map((extraLink: Link, linkIndex) => {\n      return (\n        <li key={linkIndex}>\n          <HyperLink\n            link={extraLink}\n            className=\"text-sm underline\"\n            separatorClassName=\"w-1\"\n            startEnhancer={(<BiInfoCircle size={14} />)}\n          >\n            {extraLink?.caption || 'Read more'}\n          </HyperLink>\n        </li>\n      );\n    })\n    : null;\n\n  const achievementsLink = withAchievements\n    && project?.achievements\n    && project.achievements.length\n    ? (\n      <Row className=\"mt-3\">\n        <HyperLink\n          link={getProjectAchievementsLink(project.id)}\n          className=\"text-sm underline\"\n          separatorClassName=\"w-1\"\n          startEnhancer={(<GiAchievement size={18} />)}\n        >\n          Achievements\n        </HyperLink>\n        <Badge className=\"ml-2\">\n          <small>{project.achievements.length}</small>\n        </Badge>\n      </Row>\n    )\n    : null;\n\n  const externalLinks = extraLinksList ? (\n    <ul className=\"mt-3\">\n      {extraLinksList}\n    </ul>\n  ) : null;\n\n  return (\n    <Card>\n      <CardMedia link={defaultProjectUrl}>\n        {projectCover}\n      </CardMedia>\n      <CardContent>\n        <CardTitle link={defaultProjectUrl}>\n          {project.name}\n        </CardTitle>\n        <Row className=\"mb-3 justify-between\">\n          <div>\n            {projectDates}\n          </div>\n          <div>\n            {stars}\n          </div>\n        </Row>\n        {projectSummary}\n        {projectTags}\n        {achievementsLink}\n        {externalLinks}\n      </CardContent>\n      {actions}\n      {archivedStamp}\n    </Card>\n  );\n};\n\nexport default ProjectPreview;\n","import React from 'react';\n\nimport { Project } from '../../types/Project';\nimport ProjectPreview from './ProjectPreview';\nimport Cards from '../shared/Cards';\n\ntype ProjectsListProps = {\n  projects: Project[],\n};\n\nconst ProjectsList = (props: ProjectsListProps): React.ReactElement => {\n  const { projects } = props;\n\n  const projectsElements = projects.map((project) => {\n    return <ProjectPreview project={project} key={project.id} />;\n  });\n\n  return (\n    <Cards>\n      {projectsElements}\n    </Cards>\n  );\n};\n\nexport default ProjectsList;\n","import React, { ChangeEvent } from 'react';\nimport Row from '../shared/Row';\n\nexport type SortOption = 'startDateAsc' | 'startDateDesc' | 'starsDesc';\n\nexport const sortByStartDateAsc: SortOption = 'startDateAsc';\nexport const sortByStartDateDesc: SortOption = 'startDateDesc';\nexport const sortByStarsDesc: SortOption = 'starsDesc';\n\ntype Sorter = {\n  title: string,\n  hidden?: boolean,\n}\n\ntype Sorters = Record<SortOption, Sorter>;\n\nconst sorters: Sorters = {\n  [sortByStartDateDesc]: {\n    title: '➘ start date',\n  },\n  [sortByStartDateAsc]: {\n    title: '➚ start date',\n    hidden: true,\n  },\n  [sortByStarsDesc]: {\n    title: '➘ stars',\n  },\n};\n\nexport const supportedSortOptions: SortOption[] = Object\n  .keys(sorters)\n  // @ts-ignore\n  .filter((sortOption: SortOption) => !sorters[sortOption].hidden);\n\ntype ProjectFiltersProps = {\n  sortBy: SortOption,\n  onSort: (sortKey: SortOption) => void,\n};\n\nconst ProjectFilters = (props: ProjectFiltersProps): React.ReactElement => {\n  const { onSort, sortBy } = props;\n\n  const sorterOptions = Object.keys(sorters)\n    .filter((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return !sorter?.hidden;\n    })\n    .map((sorterKey: string) => {\n      const sorter = sorters[sorterKey as SortOption];\n      return (\n        <option key={sorterKey} value={sorterKey}>\n          {sorter.title}\n        </option>\n      );\n    });\n\n  const onSortChange = (event: ChangeEvent<HTMLSelectElement>): void => {\n    const selectedKey: SortOption = event.target.value as SortOption;\n    onSort(selectedKey);\n  };\n\n  return (\n    <div>\n      <Row>\n        <div className=\"text-sm text-gray-500 mr-1\">\n          Sort by:\n        </div>\n        <div>\n          <select onChange={onSortChange} defaultValue={sortBy} className=\"text-sm\">\n            {sorterOptions}\n          </select>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProjectFilters;\n","// If it is server-side-rendering, we don't have an access to document.\n// @see: https://www.gatsbyjs.com/docs/using-client-side-only-packages/\nexport const isSSR = typeof document === 'undefined';\n","import { isSSR } from './ssr';\n\nconst getSearchParams = (): URLSearchParams => {\n  const searchQuery = isSSR ? '' : document.location.search.substring(1);\n  return new URLSearchParams(searchQuery);\n};\n\nexport const getSearchParam = (name: string): string | null => {\n  const searchParams = getSearchParams();\n  return searchParams.get(name);\n};\n\nexport const setSearchParam = (name: string, value: string): void => {\n  if (isSSR) {\n    return;\n  }\n  const searchParams = getSearchParams();\n  searchParams.set(name, value);\n  const relativeURL = `?${searchParams.toString()}${document.location.hash}`;\n  window.history.pushState(null, '', relativeURL);\n};\n\nexport const deleteSearchParam = (name: string): void => {\n  if (isSSR) {\n    return;\n  }\n  const searchParams = getSearchParams();\n  searchParams.delete(name);\n  const relativeURL = `?${searchParams.toString()}${document.location.hash}`;\n  window.history.pushState(null, '', relativeURL);\n};\n\nexport const getStringSearchParam = (name: string, defaultValue: string): string => {\n  const searchParam: string | null = getSearchParam(name);\n  if (searchParam === null) {\n    return defaultValue;\n  }\n  return searchParam;\n};\n\nexport const getIntSearchParam = (name: string, defaultValue: number): number => {\n  const searchParam: string | null = getSearchParam(name);\n  if (searchParam === null) {\n    return defaultValue;\n  }\n  return parseInt(searchParam, 10);\n};\n\nexport const getFloatSearchParam = (name: string, defaultValue: number): number => {\n  const searchParam: string | null = getSearchParam(name);\n  if (searchParam === null) {\n    return defaultValue;\n  }\n  return parseFloat(searchParam);\n};\n\nexport const getBooleanSearchParam = (name: string, defaultValue: boolean): boolean => {\n  const searchParam: string | null = getSearchParam(name);\n  if (searchParam === null) {\n    return defaultValue;\n  }\n  return searchParam.toLowerCase() === 'true';\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Project as ProjectType, Projects as ProjectsType } from '../../types/Project';\nimport ProjectsList from '../elements/ProjectsList';\nimport PageLayout from '../layouts/PageLayout';\nimport PageHeader from '../shared/PageHeader';\nimport Badge from '../shared/Badge';\nimport Row from '../shared/Row';\nimport SEO from '../shared/SEO';\nimport ProjectFilters, {\n  sortByStarsDesc, sortByStartDateAsc,\n  sortByStartDateDesc,\n  SortOption, supportedSortOptions,\n} from '../elements/ProjectFilters';\nimport { getGitHubProjectStars, getTotalGetHubProjectStars, projectMapToArray } from '../../utils/project';\nimport Stars from '../shared/Stars';\nimport { getStringSearchParam, setSearchParam } from '../../utils/url';\n\ntype ProjectsScreenProps = {\n  projects: ProjectsType,\n};\n\ntype ProjectSorter = {\n  // Returns -1, 0, +1.\n  sort: (a: ProjectType, b: ProjectType) => number,\n};\n\ntype ProjectSorters = Record<SortOption, ProjectSorter>;\n\nconst SORT_PARAM_NAME = 'sort';\n\n// @ts-ignore\nconst projectSorters: ProjectSorters = {\n  [sortByStartDateDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate > b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStartDateAsc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      if (!a?.startDate || !b.startDate || a.startDate === b.startDate) {\n        return 0;\n      }\n      return a.startDate < b.startDate ? -1 : 1;\n    },\n  },\n  [sortByStarsDesc]: {\n    sort: (a: ProjectType, b: ProjectType): number => {\n      const aStars = getGitHubProjectStars(a) || 0;\n      const bStars = getGitHubProjectStars(b) || 0;\n      if (aStars === bStars) {\n        return 0;\n      }\n      return aStars > bStars ? -1 : 1;\n    },\n  },\n};\n\nconst getDefaultSortOption = (): SortOption => {\n  const defaultOption = sortByStartDateDesc;\n  // @ts-ignore\n  const sortFromURL: SortOption = getStringSearchParam(SORT_PARAM_NAME, defaultOption);\n  if (supportedSortOptions.includes(sortFromURL)) {\n    return sortFromURL;\n  }\n  return defaultOption;\n};\n\nconst ProjectsScreen = (props: ProjectsScreenProps): React.ReactElement => {\n  const { projects } = props;\n\n  const [sortBy, setSortBy] = useState<SortOption>(getDefaultSortOption());\n  const [filteredProjects, setFilteredProjects] = useState<ProjectType[]>(\n    projectMapToArray(projects),\n  );\n\n  const onSort = (newSortOption: SortOption): void => {\n    setSearchParam(SORT_PARAM_NAME, newSortOption);\n    setSortBy(newSortOption);\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    const sortedProjects = [...filteredProjects].sort(projectSorters[sortBy].sort);\n    setFilteredProjects(sortedProjects);\n  }, [sortBy]);\n\n  const projectsNum = filteredProjects.length;\n\n  return (\n    <PageLayout>\n      <SEO\n        title=\"Projects\"\n        description=\"Projects and experiments that help people learn\"\n      />\n      <Row>\n        <PageHeader>Projects</PageHeader>\n        <Badge className=\"ml-3 self-start\">{projectsNum}</Badge>\n      </Row>\n      <Row className=\"mb-6 justify-between\">\n        <ProjectFilters onSort={onSort} sortBy={sortBy} />\n        <Row className=\"ml-3\">\n          <div className=\"text-sm text-gray-500 mr-1\">\n            Total stars:\n          </div>\n          <Stars stars={getTotalGetHubProjectStars(projects)} />\n        </Row>\n      </Row>\n      <ProjectsList projects={filteredProjects} />\n    </PageLayout>\n  );\n};\n\nexport default ProjectsScreen;\n","import React from 'react';\n\nimport ProjectsScreen from '../components/screens/ProjectsScreen';\nimport { projects } from '../data/projects';\n\nconst Projects = (): React.ReactElement => {\n  return (\n    <ProjectsScreen projects={projects} />\n  );\n};\n\nexport default Projects;\n","import { Project, ProjectID, Projects } from '../types/Project';\nimport projectStars from '../data/__generated__/projectStars.json';\nimport { GitHubStars } from '../types/GitHubStars';\nimport { Link } from '../types/Link';\nimport { routes } from '../constants/routes';\n\nexport function getGitHubProjectID(project: Project): string | null {\n  if (\n    !project\n    || !project?.gitHubRepo\n    || !project?.gitHubRepo?.repo\n    || !project?.gitHubRepo?.owner\n  ) {\n    return null;\n  }\n  return `${project.gitHubRepo.owner}/${project.gitHubRepo.repo}`;\n}\n\nexport function getGitHubProjectStars(project: Project): number | null {\n  const projectID: string | null = getGitHubProjectID(project);\n  if (!projectID || !projectStars) {\n    return null;\n  }\n  const projectStarsTyped: GitHubStars = projectStars;\n  if (!(projectID in projectStarsTyped)) {\n    return null;\n  }\n  return projectStarsTyped[projectID]?.stars || null;\n}\n\nexport function projectMapToArray(projects: Projects): Project[] {\n  return Object.keys(projects)\n    .map<Project>((projectID: ProjectID) => {\n      const project: Project = { ...projects[projectID] };\n      // Make sure that the project ID is the same as the project key in the projects map.\n      project.id = projectID;\n      return project;\n    });\n}\n\nexport function getTotalGetHubProjectStars(projects: Projects): number | null {\n  return projectMapToArray(projects).reduce((totalStars: number, project: Project) => {\n    const currentProjectStars = getGitHubProjectStars(project) || 0;\n    return totalStars + currentProjectStars;\n  }, 0);\n}\n\nexport function getProjectAchievementsLink(projectID: ProjectID): Link {\n  return {\n    url: `${routes.projects.path}/${projectID}#achievements`,\n  };\n}\n"],"names":["GenIcon","module","exports","props","Archived","React","title","className","Row","FiArchive","children","classes","commonClassName","hoverClassName","rest","hoverButtonClasses","HyperLink","Object","assign","cardModeRow","cardModeColumn","mode","commonCardStyles","cardContentModeRow","cardContentModeColumn","commonClasses","style","flex","cardMediaModeRow","cardMediaModeColumn","link","url","wrappedChildren","formatted","headerElement","H","level","hLevel","linkElement","cardModeList","cardModeGrid","months","dateToString","date","withDay","getMonth","getDate","getFullYear","startDate","endDate","startDateString","Date","dateSeparator","endDateString","FiCalendar","stars","starsElements","FiStar","size","num","toFixed","replace","starsElementsWrapped","tag","key","name","tags","itemClassName","numToShow","Infinity","Expander","items","toHide","index","onRender","Tag","projects","id","srcURL","demoURL","cover","srcPath","summary","gitHubRepo","owner","repo","achievements","_project$srcURL","project","projectTags","Tags","projectDates","DateRange","projectStars","getGitHubProjectStars","projectStarsLink","caption","Stars","projectSummaryLines","map","summaryLine","projectSummary","defaultProjectUrl","archived","undefined","demoLink","ButtonLink","startEnhancer","IoPlay","sourceCodeLink","FaGithub","projectCover","FluidImage","image","archivedStamp","CardActions","actions","extraLinksList","links","length","extraLink","linkIndex","separatorClassName","BiInfoCircle","achievementsLink","withAchievements","getProjectAchievementsLink","GiAchievement","Badge","externalLinks","Card","CardMedia","CardContent","CardTitle","projectsElements","ProjectPreview","Cards","sortByStartDateAsc","sortByStartDateDesc","sortByStarsDesc","sorters","hidden","supportedSortOptions","keys","filter","sortOption","onSort","sortBy","sorterOptions","sorterKey","sorter","value","onChange","event","selectedKey","target","defaultValue","isSSR","document","getSearchParams","searchQuery","location","search","substring","URLSearchParams","getSearchParam","get","SORT_PARAM_NAME","projectSorters","sort","a","b","aStars","bStars","getDefaultSortOption","defaultOption","sortFromURL","getStringSearchParam","searchParam","includes","setSortBy","useState","filteredProjects","setFilteredProjects","projectMapToArray","useEffect","sortedProjects","_toConsumableArray","projectsNum","PageLayout","SEO","description","PageHeader","ProjectFilters","newSortOption","setSearchParam","searchParams","set","relativeURL","toString","hash","window","history","pushState","getTotalGetHubProjectStars","ProjectsList","Projects","ProjectsScreen","_projectStarsTyped$pr","projectID","_project$gitHubRepo","_project$gitHubRepo2","getGitHubProjectID","reduce","totalStars","routes"],"sourceRoot":""}